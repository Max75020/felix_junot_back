# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Définir explicitement les contrôleurs comme publics
    App\Controller\GenerateResetTokenController:
        public: true

    App\Controller\ResetPasswordController:
        public: true

    App\Controller\CurrentUserController:
        public: true

    App\Controller\ConfirmSignupController:
        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\State\UserPasswordHasher:
        bind:
            $processor: '@api_platform.doctrine.orm.state.persist_processor'

    App\State\CommandeProcessor:
        tags:
            - { name: 'api_platform.state_processor' }

    App\Filter\CurrentUserFilter:
        arguments:
            - '@doctrine'
            - '@security.helper'
        tags:
            - { name: 'api_platform.filter', id: 'app.current_user_filter' }

    App\Extension\CurrentUserExtension:
        arguments:
            $security: '@security.helper'
            $logger: '@logger'
        tags:
            #- { name: 'api_platform.doctrine.orm.query_extension.collection' }
            #- { name: 'api_platform.doctrine.orm.query_extension.item' }

    App\Extension\CommandeExtension:
        arguments:
            $security: '@security.helper'
            $logger: '@logger'
        tags:
            - { name: 'api_platform.doctrine.orm.query_extension.collection' }
            - { name: 'api_platform.doctrine.orm.query_extension.item' }

    App\Extension\AdresseExtension:
        arguments:
            $security: '@security.helper'
            $logger: '@logger'
        tags:
            - { name: 'api_platform.doctrine.orm.query_extension.collection' }
            - { name: 'api_platform.doctrine.orm.query_extension.item' }

    App\Service\StripeService:
        arguments:
            $stripeSecretKey: '%env(STRIPE_SECRET_KEY)%'

    App\State\PanierProcessor:
        arguments:
            $security: '@security.helper'
            $entityManager: '@doctrine.orm.entity_manager'
            $requestStack: '@request_stack'
            $logger: '@logger'
        tags:
            - { name: 'api_platform.state_processor' }
    App\Service\EmailService:
        arguments:
            $mailer: '@mailer.mailer'
            $twig: '@twig'

    App\State\CartStateProvider:
        arguments:
            $security: '@security.helper'
            $entityManager: '@doctrine.orm.entity_manager'
        tags:
          - { name: 'api_platform.state_provider', item: 'App\Entity\Panier' }

    App\EventListener\RefreshTokenCleanupListener:
        arguments:
            $connection: '@doctrine.dbal.default_connection'
        tags:
          - { name: doctrine.event_listener, event: preRemove }